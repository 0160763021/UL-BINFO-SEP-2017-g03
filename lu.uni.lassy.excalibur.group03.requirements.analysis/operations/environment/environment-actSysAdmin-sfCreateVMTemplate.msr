package lu.uni.lassy.excalibur.group03.requirements.analysis.environment.operations.actSysAdmin.outactSysAdmin.sfCreateVMTemplate {

import lu.uni.lassy.messir.libraries.primitives
import lu.uni.lassy.messir.libraries.math
import lu.uni.lassy.messir.libraries.string
import lu.uni.lassy.messir.libraries.calendar

import lu.uni.lassy.excalibur.group03.requirements.analysis.concepts.primarytypes.datatypes
import lu.uni.lassy.excalibur.group03.requirements.analysis.concepts.primarytypes.classes
import lu.uni.lassy.excalibur.group03.requirements.analysis.environment


	Operation Model {

		operation: lu.uni.lassy.excalibur.group03.requirements.analysis.environment.actSysAdmin.outactSysAdmin.sfCreateVMTemplate(
				AdtVMID: dtVMID, AdtVMName: dtVMName, AdtVMDescription: dtVMDescription,
				AdtQID1: dtQuestionID, AetAnswer1: etAnswer,
				AdtQID2: dtQuestionID, AetAnswer2: etAnswer,
				AdtQID3: dtQuestionID, AetAnswer3: etAnswer,
				AdtQID4: dtQuestionID, AetAnswer4: etAnswer,
				AdtQID5: dtQuestionID, AetAnswer5: etAnswer,
				AdtQID6: dtQuestionID, AetAnswer6: etAnswer,
				AdtSysID: dtSysID
			):ptBoolean{
				
			//Pre Protocol
			preP{let TheSystem: ctState in
				let TheActor: actSysAdmin in 
				self.rnActor.rnSystem = TheSystem
				and self.rnActor = TheActor
				
				//Prep01
				and TheSystem.vpStarted = true
				//Prep02
				and TheActor.rnclAuthenticated.vpIsLogged = true}
			
			//Pre Functional
			preF{let TheSystem: ctState in	
				let ColclVM:Bag(clVM) in
				
				//PreF01
				and TheSystem.rnclVM->select(Vid.eq(AdtVMID)) = ColclVMs
				and ColclVMs->isEmpty() = true
			}
			
			
			//Post functional
		postF{let TheSystem: ctState in
			let TheclVM: clVM in
			let TheSysAdmin: actSysAdmin in
	
			let TheclComponentCPU: clComponent in
			let TheclComponentGPU: clComponent in
			let TheclComponentRAM: clComponent in
			let TheclComponentSOF: clComponent in
			let TheclComponentHDD: clComponent in
			let TheclComponentSSD: clComponent in

			let TheclComponentAmount1: clComponentAmount in
			
			let AptStringMessageForSysAdmin: ptString in
			
			self.rnActor.rnSystem =TheSystem
			
			
			if(dtVMDescription.is(AdtVMDescription) = false or dtVMName.is(AdtVMName) = false) then(
				
					TheclVM.init(AdtVMID, AdtVMName, AdtVMDescritption)
			
					if (AdtQuestionID1.eq("True")) then (
						
						TheSystem.clProcessUnit->select(cores.eq(16)) = TheclComponentCPU
						
						let TheCID1: dtComponentID in
						and TheCID1 = TheclComponentCPU.ComponentID
						TheclComponentAmount1.init(AdtVID, TheCID1, "2" )
					)else(
						TheSystem.clProcessUnit->select(cores.eq(8)) = TheclComponentCPU
						let TheCID2: dtComponentID in
						and TheCID2 = TheclComponentCPU.ComponentID
						TheclComponentAmount1.init(AdtVID, TheCID2, "1" )
					)endif
						
									
					
					if (AdtQuestionID2.eq("True")) then (
						
						TheSystem.clProcessUnit->select(cores.eq(600)) = TheclComponentGPU
						let TheCID3: dtComponentID in
						and TheCID3 = TheclComponentGPU.ComponentID
						TheclComponentAmount2.init(AdtVID, TheCID3, "4" )
					)else(
						true
					)endif
		
		
					
					if (AdtQuestionID3.eq("True")) then (
						
						TheSystem.clStorage->select(capacity.eq(4)) = TheclComponentHDD
						let TheCID4: dtComponentID in
						and TheCID4 = TheclComponentHDD.ComponentID
						TheclComponentAmount3.init(AdtVID, TheCID4, "4" )
					
					)else(
		
						heSystem.clStorage->select(capacity.eq(1)) = TheclComponentHDD
						let TheCID44: dtComponentID in
						and TheCID44 = TheclComponentHDD.ComponentID
						TheclComponentAmount3.init(AdtVID, TheCID44, "1" )
		
					)endif
		
					if (AdtQuestionID4.eq("True")) then (
						
						TheSystem.clStorage->select(capacity.eq(16)) = TheclComponentRAM
						let TheCID5: dtComponentID in
						and TheCID5 = TheclComponentRAM.ComponentID
						TheclComponentAmount4.init(AdtVID, TheCID5, "4" )
									
		
					)else(
		
						TheSystem.clStorage->select(capacity.eq(8)) = TheclComponentRAM
						let TheCID6: dtComponentID in
						and TheCID6 = TheclComponentRAM.ComponentID
						TheclComponentAmount4.init(AdtVID, TheCID6, "2" )
		
					)endif
		
					if (AdtQuestionID5.eq("True")) then (
						
						TheSystem.clStorage->select(capacity.eq(4)) = TheclComponentSSD
						let TheCID7: dtComponentID in
						and TheCID7 = TheclComponentSDD.ComponentID
						TheclComponentAmount5.init(AdtVID, TheCID7, "4" )				
		
					)else(
						true
					)endif
																
					AptStringMessageForSysAdmin.eq("VM succesfully created")
					and TheSysAdmin.rnInterfaceIN^ieMessage(AptStringMessageForSysAdmin)
					
				
			)else(
				
				AptStringMessageForSysAdmin.eq("Name/Description is missing")
				and TheSysAdmin.rnInterfaceIN^ieMessage(AptStringMessageForSysAdmin)
				
			)endif
			
			

		}
		
		//Post protocol
		postP{
			true
		}
		
		}
	}
}
