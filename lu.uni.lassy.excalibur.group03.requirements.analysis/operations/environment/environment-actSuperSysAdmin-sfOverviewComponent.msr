package lu.uni.lassy.excalibur.group03.requirements.analysis.environment.operations.actSuperSysAdmin.outactSuperSysAdmin.sfOverviewComponent {

import lu.uni.lassy.messir.libraries.primitives
import lu.uni.lassy.messir.libraries.math
import lu.uni.lassy.messir.libraries.string
import lu.uni.lassy.messir.libraries.calendar

import lu.uni.lassy.excalibur.group03.requirements.analysis.concepts.primarytypes.datatypes
import lu.uni.lassy.excalibur.group03.requirements.analysis.concepts.primarytypes.classes
import lu.uni.lassy.excalibur.group03.requirements.analysis.environment

	Operation Model {

		operation: lu.uni.lassy.excalibur.group03.requirements.analysis.environment.actSuperSysAdmin.outactSuperSysAdmin.sfOverviewComponent(AetComponent: etComponent):ptBoolean{
		// include below the specification information (pre,post or ocl or prolog)
		
		preP{let TheSystem: ctState in
			let AvpStarted: ptBoolean in
			let TheActor: actSuperSysAdmin in 
			self.rnActor.rnSystem = TheSystem
			and self.rnActor = TheActor
			
			//Prep01
			and TheSystem.vpStarted = true
			//Prep02
			and TheActor.rnclAuthenticated.vpIsLogged = true}
		
		preF{true}	
		
		postF{let TheSystem: ctState in
			let AetComponent: etComponent in
			let AMaxCmp: dtAmount in
			let ACmpUsed: dtAmount in
			let ColclCmp:Bag(clComponent) in
			let ColclCmpAmt:Bag(clComponentAmount) in
			let ColclVM: Bag(clVM) in
			let VirtualMachine: clVM in
			let ACmpAvailable: dtAmount in
			let ColclVMComponent:Bag(clComponentAmount) in 
			
			self.rnActor.rnSystem = TheSystem
			
			TheSystem.clComponent->select(CType.eq(AetComponent)) = ColclCmp
			TheSystem.clComponentAmount->select(Cid.eq(ColclCmp)) = ColclCmpAmt
			
			self.ColclCmpAmt.dtAmount->sum() = AMaxCmp
			
			TheSystem.clVM->select(Vid) = ColclVM
			TheSystem.clComponentAmount->select(Vid.eq(ColclVM)) = ColclCmpAmt
			TheSystem.clComponentAmount->select(ColclCmp.eq(ColclVMComponent)) = ColclCmpAmt
			
			self.ColclCmpAmt.dtAmount->sum() = ACmpUsed
			
			AMaxCmp-ACmpUsed = ACmpAvailable
		}

		
		postP{true}	
		
		}
	}
}
